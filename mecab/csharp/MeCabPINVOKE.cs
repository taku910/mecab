//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace MeCab {

class MeCabPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="SWIGRegisterExceptionCallbacks_MeCab")]
    public static extern void SWIGRegisterExceptionCallbacks_MeCab(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_MeCab")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_MeCab(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_MeCab(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_MeCab(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;
    private static global::System.Object exceptionsLock = null;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(exceptionsLock) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(exceptionsLock) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }

    static SWIGPendingException() {
      exceptionsLock = new global::System.Object();
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="SWIGRegisterStringCallback_MeCab")]
    public static extern void SWIGRegisterStringCallback_MeCab(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_MeCab(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static MeCabPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_DictionaryInfo_filename_get")]
  public static extern string DictionaryInfo_filename_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_DictionaryInfo_charset_get")]
  public static extern string DictionaryInfo_charset_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_DictionaryInfo_size_get")]
  public static extern uint DictionaryInfo_size_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_DictionaryInfo_type_get")]
  public static extern int DictionaryInfo_type_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_DictionaryInfo_lsize_get")]
  public static extern uint DictionaryInfo_lsize_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_DictionaryInfo_rsize_get")]
  public static extern uint DictionaryInfo_rsize_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_DictionaryInfo_version_get")]
  public static extern ushort DictionaryInfo_version_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_DictionaryInfo_next_get")]
  public static extern global::System.IntPtr DictionaryInfo_next_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_new_DictionaryInfo")]
  public static extern global::System.IntPtr new_DictionaryInfo();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_delete_DictionaryInfo")]
  public static extern void delete_DictionaryInfo(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Path_rnode_get")]
  public static extern global::System.IntPtr Path_rnode_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Path_rnext_get")]
  public static extern global::System.IntPtr Path_rnext_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Path_lnode_get")]
  public static extern global::System.IntPtr Path_lnode_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Path_lnext_get")]
  public static extern global::System.IntPtr Path_lnext_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Path_cost_get")]
  public static extern int Path_cost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Path_prob_set")]
  public static extern void Path_prob_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Path_prob_get")]
  public static extern float Path_prob_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_prev_get")]
  public static extern global::System.IntPtr Node_prev_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_next_get")]
  public static extern global::System.IntPtr Node_next_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_enext_get")]
  public static extern global::System.IntPtr Node_enext_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_bnext_get")]
  public static extern global::System.IntPtr Node_bnext_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_rpath_get")]
  public static extern global::System.IntPtr Node_rpath_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_lpath_get")]
  public static extern global::System.IntPtr Node_lpath_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_feature_get")]
  public static extern string Node_feature_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_id_get")]
  public static extern uint Node_id_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_length_get")]
  public static extern ushort Node_length_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_rlength_get")]
  public static extern ushort Node_rlength_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_rcAttr_get")]
  public static extern ushort Node_rcAttr_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_lcAttr_get")]
  public static extern ushort Node_lcAttr_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_posid_get")]
  public static extern ushort Node_posid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_char_type_get")]
  public static extern byte Node_char_type_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_stat_get")]
  public static extern byte Node_stat_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_isbest_get")]
  public static extern byte Node_isbest_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_alpha_get")]
  public static extern float Node_alpha_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_beta_get")]
  public static extern float Node_beta_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_prob_set")]
  public static extern void Node_prob_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_prob_get")]
  public static extern float Node_prob_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_wcost_get")]
  public static extern short Node_wcost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_cost_get")]
  public static extern int Node_cost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Node_surface_get")]
  public static extern string Node_surface_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_NOR_NODE_get")]
  public static extern int MECAB_NOR_NODE_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_UNK_NODE_get")]
  public static extern int MECAB_UNK_NODE_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_BOS_NODE_get")]
  public static extern int MECAB_BOS_NODE_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_EOS_NODE_get")]
  public static extern int MECAB_EOS_NODE_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_EON_NODE_get")]
  public static extern int MECAB_EON_NODE_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_SYS_DIC_get")]
  public static extern int MECAB_SYS_DIC_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_USR_DIC_get")]
  public static extern int MECAB_USR_DIC_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_UNK_DIC_get")]
  public static extern int MECAB_UNK_DIC_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_ONE_BEST_get")]
  public static extern int MECAB_ONE_BEST_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_NBEST_get")]
  public static extern int MECAB_NBEST_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_PARTIAL_get")]
  public static extern int MECAB_PARTIAL_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_MARGINAL_PROB_get")]
  public static extern int MECAB_MARGINAL_PROB_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_ALTERNATIVE_get")]
  public static extern int MECAB_ALTERNATIVE_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_ALL_MORPHS_get")]
  public static extern int MECAB_ALL_MORPHS_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_ALLOCATE_SENTENCE_get")]
  public static extern int MECAB_ALLOCATE_SENTENCE_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_ANY_BOUNDARY_get")]
  public static extern int MECAB_ANY_BOUNDARY_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_TOKEN_BOUNDARY_get")]
  public static extern int MECAB_TOKEN_BOUNDARY_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_MECAB_INSIDE_TOKEN_get")]
  public static extern int MECAB_INSIDE_TOKEN_get();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_clear")]
  public static extern void Lattice_clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_is_available")]
  public static extern bool Lattice_is_available(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_bos_node")]
  public static extern global::System.IntPtr Lattice_bos_node(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_eos_node")]
  public static extern global::System.IntPtr Lattice_eos_node(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_end_nodes")]
  public static extern global::System.IntPtr Lattice_end_nodes(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_begin_nodes")]
  public static extern global::System.IntPtr Lattice_begin_nodes(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_sentence")]
  public static extern string Lattice_sentence(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_size")]
  public static extern uint Lattice_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_set_Z")]
  public static extern void Lattice_set_Z(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_Z")]
  public static extern double Lattice_Z(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_set_theta")]
  public static extern void Lattice_set_theta(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_theta")]
  public static extern float Lattice_theta(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_next")]
  public static extern bool Lattice_next(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_request_type")]
  public static extern int Lattice_request_type(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_has_request_type")]
  public static extern bool Lattice_has_request_type(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_set_request_type")]
  public static extern void Lattice_set_request_type(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_add_request_type")]
  public static extern void Lattice_add_request_type(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_remove_request_type")]
  public static extern void Lattice_remove_request_type(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_newNode")]
  public static extern global::System.IntPtr Lattice_newNode(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_toString__SWIG_0")]
  public static extern string Lattice_toString__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_toString__SWIG_1")]
  public static extern string Lattice_toString__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_enumNBestAsString")]
  public static extern string Lattice_enumNBestAsString(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_has_constraint")]
  public static extern bool Lattice_has_constraint(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_boundary_constraint")]
  public static extern int Lattice_boundary_constraint(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_feature_constraint")]
  public static extern string Lattice_feature_constraint(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_set_boundary_constraint")]
  public static extern void Lattice_set_boundary_constraint(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_set_feature_constraint")]
  public static extern void Lattice_set_feature_constraint(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_set_result")]
  public static extern void Lattice_set_result(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_what")]
  public static extern string Lattice_what(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_set_what")]
  public static extern void Lattice_set_what(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_delete_Lattice")]
  public static extern void delete_Lattice(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_new_Lattice")]
  public static extern global::System.IntPtr new_Lattice();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Lattice_set_sentence")]
  public static extern void Lattice_set_sentence(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Model_dictionary_info")]
  public static extern global::System.IntPtr Model_dictionary_info(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Model_transition_cost")]
  public static extern int Model_transition_cost(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2, ushort jarg3);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Model_lookup")]
  public static extern global::System.IntPtr Model_lookup(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Model_createTagger")]
  public static extern global::System.IntPtr Model_createTagger(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Model_createLattice")]
  public static extern global::System.IntPtr Model_createLattice(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Model_swap")]
  public static extern bool Model_swap(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Model_version")]
  public static extern string Model_version();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_delete_Model")]
  public static extern void delete_Model(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_new_Model__SWIG_0")]
  public static extern global::System.IntPtr new_Model__SWIG_0(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_new_Model__SWIG_1")]
  public static extern global::System.IntPtr new_Model__SWIG_1();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_parse__SWIG_0")]
  public static extern bool Tagger_parse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_parse__SWIG_1")]
  public static extern bool Tagger_parse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_parse__SWIG_2")]
  public static extern string Tagger_parse__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_parseToNode")]
  public static extern global::System.IntPtr Tagger_parseToNode(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_parseNBest")]
  public static extern string Tagger_parseNBest(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_parseNBestInit")]
  public static extern bool Tagger_parseNBestInit(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_nextNode")]
  public static extern global::System.IntPtr Tagger_nextNode(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_next")]
  public static extern string Tagger_next(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_formatNode")]
  public static extern string Tagger_formatNode(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_set_request_type")]
  public static extern void Tagger_set_request_type(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_request_type")]
  public static extern int Tagger_request_type(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_partial")]
  public static extern bool Tagger_partial(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_set_partial")]
  public static extern void Tagger_set_partial(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_lattice_level")]
  public static extern int Tagger_lattice_level(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_set_lattice_level")]
  public static extern void Tagger_set_lattice_level(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_all_morphs")]
  public static extern bool Tagger_all_morphs(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_set_all_morphs")]
  public static extern void Tagger_set_all_morphs(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_set_theta")]
  public static extern void Tagger_set_theta(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_theta")]
  public static extern float Tagger_theta(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_dictionary_info")]
  public static extern global::System.IntPtr Tagger_dictionary_info(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_what")]
  public static extern string Tagger_what(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_delete_Tagger")]
  public static extern void delete_Tagger(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_version")]
  public static extern string Tagger_version();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_new_Tagger__SWIG_0")]
  public static extern global::System.IntPtr new_Tagger__SWIG_0(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_new_Tagger__SWIG_1")]
  public static extern global::System.IntPtr new_Tagger__SWIG_1();

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_parseToString__SWIG_0")]
  public static extern string Tagger_parseToString__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_Tagger_parseToString__SWIG_1")]
  public static extern string Tagger_parseToString__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("MeCab", EntryPoint="CSharp_MeCab_VERSION_get")]
  public static extern string VERSION_get();
}

}
